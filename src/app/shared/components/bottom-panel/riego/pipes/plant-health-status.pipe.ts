 import { Pipe, PipeTransform } from '@angular/core';

interface Plant {
  waterLevel: number;
  health: number;
  growth: number;
  type: string;
}

@Pipe({
  name: 'plantHealthStatus',
  standalone: true
})
export class PlantHealthStatusPipe implements PipeTransform {

  transform(
    plant: Plant, 
    returnType: 'status' | 'color' | 'icon' | 'recommendation' = 'status'
  ): string {
    if (!plant) return '';
    
    switch (returnType) {
      case 'status':
        return this.getOverallStatus(plant);
      case 'color':
        return this.getStatusColor(plant);
      case 'icon':
        return this.getStatusIcon(plant);
      case 'recommendation':
        return this.getRecommendation(plant);
      default:
        return this.getOverallStatus(plant);
    }
  }

  private getOverallStatus(plant: Plant): string {
    const avgHealth = (plant.waterLevel + plant.health + plant.growth) / 3;
    
    if (plant.waterLevel < 15) return 'Cr√≠tico - Sin Agua';
    if (plant.health < 20) return 'Cr√≠tico - Enfermo';
    if (avgHealth < 30) return 'Muy Malo';
    if (avgHealth < 50) return 'Malo';
    if (avgHealth < 70) return 'Regular';
    if (avgHealth < 85) return 'Bueno';
    return 'Excelente';
  }

  private getStatusColor(plant: Plant): string {
    const avgHealth = (plant.waterLevel + plant.health + plant.growth) / 3;
    
    if (plant.waterLevel < 15 || plant.health < 20) return '#C53030';
    if (avgHealth < 30) return '#E53E3E';
    if (avgHealth < 50) return '#DD6B20';
    if (avgHealth < 70) return '#D69E2E';
    if (avgHealth < 85) return '#38A169';
    return '#00D4AA';
  }

  private getStatusIcon(plant: Plant): string {
    const avgHealth = (plant.waterLevel + plant.health + plant.growth) / 3;
    
    if (plant.waterLevel < 15) return 'üö®';
    if (plant.health < 20) return 'ü¶†';
    if (avgHealth < 30) return 'üíÄ';
    if (avgHealth < 50) return 'üò∑';
    if (avgHealth < 70) return 'üòê';
    if (avgHealth < 85) return 'üòä';
    return 'üåü';
  }

  private getRecommendation(plant: Plant): string {
    const recommendations: string[] = [];
    
    // An√°lisis de agua
    if (plant.waterLevel < 15) {
      recommendations.push('üö® REGAR INMEDIATAMENTE');
    } else if (plant.waterLevel < 30) {
      recommendations.push('üíß Regar pronto');
    } else if (plant.waterLevel > 90) {
      recommendations.push('‚ö†Ô∏è Reducir riego');
    }
    
    // An√°lisis de salud
    if (plant.health < 25) {
      recommendations.push('üåø Aplicar tratamiento');
    } else if (plant.health < 50) {
      recommendations.push('üîç Revisar plagas');
    }
    
    // An√°lisis de crecimiento
    if (plant.growth < 30) {
      recommendations.push('üå± Fertilizar');
    } else if (plant.growth > 85) {
      recommendations.push('‚úÇÔ∏è Considerar poda');
    }
    
    // Recomendaciones espec√≠ficas por tipo de planta
    const plantSpecific = this.getPlantSpecificRecommendation(plant);
    if (plantSpecific) {
      recommendations.push(plantSpecific);
    }
    
    if (recommendations.length === 0) {
      return '‚úÖ Planta en buen estado';
    }
    
    return recommendations[0]; // Retorna la recomendaci√≥n m√°s prioritaria
  }

  private getPlantSpecificRecommendation(plant: Plant): string | null {
    switch (plant.type.toLowerCase()) {
      case 'tomate':
        if (plant.waterLevel > 80 && plant.health < 60) {
          return 'üçÖ Cuidado: tomates sensibles al exceso de agua';
        }
        break;
      case 'lechuga':
        if (plant.growth > 70) {
          return 'ü•¨ Listo para cosecha pronto';
        }
        break;
      case 'zanahoria':
        if (plant.waterLevel < 40) {
          return 'ü•ï Zanahorias necesitan riego constante';
        }
        break;
      case 'pimiento':
        if (plant.waterLevel < 50 && plant.health > 70) {
          return 'üå∂Ô∏è Aumentar riego para mejor producci√≥n';
        }
        break;
      case 'ma√≠z':
        if (plant.waterLevel < 60) {
          return 'üåΩ Ma√≠z requiere mucha agua';
        }
        break;
      case 'br√≥coli':
        if (plant.health < 60) {
          return 'ü•¶ Br√≥coli sensible a temperaturas';
        }
        break;
      case 'pepino':
        if (plant.waterLevel < 70) {
          return 'ü•í Pepino necesita riego frecuente';
        }
        break;
      case 'cebolla':
        if (plant.waterLevel > 75) {
          return 'üßÖ Cebolla prefiere suelo menos h√∫medo';
        }
        break;
    }
    return null;
  }
}
